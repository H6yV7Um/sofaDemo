## check parameters
#if (${operation.paramType} == "object")
    	if (${operation.params.get(0).name} == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}

#end
## prepare parameters
#if (${operation.params.size()} == 0)
#set ($paramName = "null")

#elseif (${operation.params.size()} == 1)
#if (${operation.param.javaTypePrimitive})
        ${operation.param.simpleJavaTypeForPrimitive} param = new ${operation.param.simpleJavaTypeForPrimitive}(${operation.param.name});
#set ($paramName = "param")

#else
#set ($paramName = ${operation.param.name})

#end
#else
        Map param = new HashMap();

#foreach ($param in ${operation.params})
#if ($param.javaTypeForPrimitive)
        param.put("${param.name}", new ${param.simpleJavaTypeForPrimitive}(${param.name}));
#else
        param.put("${param.name}", ${param.name});
#end
#end
#set ($paramName = "param")

#end
        //分页处理
        Paginator paginator = new Paginator();
        paginator.setItemsPerPage(pageSize);
        paginator.setPage(pageNum);

        paginator.setItems(((Integer) getSqlMapClientTemplate().queryForObject("${operation.mappedStatementIdForCount}", ${paramName})).intValue());
        
        PageList  pageList = new PageList();
        pageList.setPaginator(paginator);
		if (paginator.getBeginIndex() <= paginator.getItems()) {
            ${paramName}.put("${operation.startRowName}", new Integer(paginator.getBeginIndex()));
            ${paramName}.put("${operation.endRowName}", new Integer(paginator.getEndIndex()));
		}
		//判断开关是否开
  	  if (this.getPower() == false) {
  		  //直接从原字段取值
            pageList.addAll(getSqlMapClientTemplate().queryForList("${operation.mappedStatementId}", ${paramName}));  
            return pageList;
  	  }
	  
	  //当开关开的时候，从新字段取数值
		${table.getQualifiedDOClassName()} opDO = new ${table.getQualifiedDOClassName()}();
		
		List<${table.getQualifiedDOClassName()}> tempValue = getSqlMapClientTemplate().queryForList("${operation.mappedStatementId}", ${paramName});
			
		if (CollectionUtils.isEmpty(tempValue)){
		    pageList.add(tempValue);
		    return pageList;
		}
#if(${table.getTableConfig().bIntegrity()} == true)	
	    //完整性校验部分
	    methodUtils.checkIntegForPaging(tempValue,opDO);
#end
         ##下面是机密性的部分
#if(${table.getTableConfig().bConfidentiality()} == true)
//调用分页操作时的机密性解密方法  
        PageList pagelist = methodUtils.getConfResultForPaging(pageList, tempValue,opDO);
#end

        return pageList;